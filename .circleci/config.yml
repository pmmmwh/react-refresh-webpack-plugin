version: 2.1

anchors:
  - &node-version-enum
    - '18.20'
    - '20.14'
    - '22.2'
  - &wds-version-enum
    - '4'
    - '5'
  - &node-version-param
    node-version:
      default: '20.14'
      enum: *node-version-enum
      type: enum
  - &wds-version-param
    wds-version:
      default: '5'
      enum: *wds-version-enum
      type: enum

commands:
  install-deps:
    parameters:
      <<: *node-version-param
    steps:
      - restore_cache:
          keys:
            - node-deps-v1-<< parameters.node-version >>-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - node-deps-v1-<< parameters.node-version >>-{{ .Branch }}-
            - node-deps-v1-<< parameters.node-version >>-
      - run:
          name: Install project dependencies
          command: |-
            yarn install \
              --cache-folder ~/.cache/yarn \
              --frozen-lockfile
      - save_cache:
          key: node-deps-v1-<< parameters.node-version >>-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

executors:
  node:
    parameters:
      <<: *node-version-param
    docker:
      - image: cimg/node:<< parameters.node-version >>-browsers
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD

jobs:
  lint-and-format:
    executor: node
    working_directory: ~/project
    steps:
      - checkout
      - install-deps
      - run:
          name: Check Project Linting
          command: yarn lint
      - run:
          name: Check Project Formatting
          command: yarn format:check

  test:
    executor:
      name: node
      node-version: << parameters.node-version >>
    parameters:
      <<: *node-version-param
      <<: *wds-version-param
    parallelism: 4
    working_directory: ~/project
    steps:
      - checkout
      - install-deps:
          node-version: << parameters.node-version >>
      - run:
          name: Run Tests
          command: |
            TESTFILES=$(circleci tests glob "test/**/*.test.js" | circleci tests split --split-by=timings)
            yarn test $TESTFILES
          environment:
            JEST_JUNIT_ADD_FILE_ATTRIBUTE: 'true'
            JEST_JUNIT_OUTPUT_DIR: test-results/jest
            JEST_JUNIT_OUTPUT_NAME: results.xml
            WDS_VERSION: << parameters.wds-version >>
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results

workflows:
  test-matrix:
    jobs:
      - lint-and-format
      - test:
          matrix:
            parameters:
              node-version: *node-version-enum
              wds-version: *wds-version-enum
          name: test/node:<< matrix.node-version >>/wds:<< matrix.wds-version >>
